var Redis = require('redis'),
    Twitter = require('twitter')
    util = require('util');

var generator = function(conf) {
  
  // the object we'll return
  var gene = {};

  // instanciate a redis client
  gene.redis = Redis.createClient(conf.redis);
  
  gene.randomWord = function(callback) {
    this.redis.randomkey(function(result, key) {
      //console.log('randomWord', result, key);
      callback(key);
    });
  }

  gene.nextWord = function(word, callback) {
    this.redis.exists(word, function(err, data) {
      if (data == null) return callback(null);
      // TODO: not sure of this
      gene.redis.hgetall(word, function(result, data) {
        var sum = 0;
        for (var i in data) {
        	sum += data[i];
        }
        var rand = Math.floor(Math.random()*sum+1);
        var partial_sum = 0;
        var next = null;
        for (var i in data) {
          partial_sum += data[i];
          if (partial_sum >= rand) { next = i; }
        }
        callback(next);
      });
    });
  }

  gene.randomSentance = function(options, callback, word) {
    var sentance = [];
    this.randomWord( function(word) {
      function build(next) {
        sentance.push(!next || sentance.length > 15 ? '.' : ' ' + next);
      
        if (sentance.length > 5 && /(\.|!|\?)/.exec(sentance)) {
  				callback(null, sentance.join(''));
        } else {
          // TODO: not sure of this
  				gene.nextWord(next, build);
  			}
      }
      build(word);
    });
  }
  return gene;
};

var harvester = function(conf) {
  
  // the object we'll return
  var harv = {};
  
  // instanciate a twitter client
  harv.twit = new Twitter(conf.twitter);

  // instanciate a redis client
  harv.redis = Redis.createClient(conf.redis);

  // harvest twitter with options
  harv.initTwitterStream = function(streamOptions) {
    this.twit.verifyCredentials(function(data) {
      //console.log(util.inspect(data));
    });

    streamOptions = streamOptions || {};

    this.twit.stream('statuses/filter', streamOptions, function(stream) {
      stream.on('data', function(data) {
        if (!data.text) return;

        var words = data.text.split(/\s+/);
        for(var j = 0; j < words.length - 1; j++) {
          harv.redis.hincrby(words[j], words[j+1], 1 + Math.sqrt(data.retweet_count));
        }
			
  			console.log(words.length, 'words');
      });

      stream.on('error', function(data) {
        //console.log('onerror: ', data);
      });

      console.log("I'm listenning to twitter", util.inspect(streamOptions));
    });
  };
  return harv;
};


module.exports = {
	generator: generator,
  harvester: harvester
}